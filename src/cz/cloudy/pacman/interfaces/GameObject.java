package cz.cloudy.pacman.interfaces;

import cz.cloudy.pacman.core.GameObjectCollector;
import cz.cloudy.pacman.types.Vector2;

public abstract class GameObject implements IRenderable {
    private int     id;
    private String  name;
    private Vector2 position;
    private float   rotation;
    private Vector2 scale;

    /**
     * Generates GameObject without specifying name.
     * Name is automatically generated by class name and id.
     */
    public GameObject() {
        this(null,
             Vector2.IDENTITY,
             Vector2.SCALE_IDENTITY,
             0f);
    }

    /**
     * Constructs GameObject with specified name.
     * if name is set to null, name is generated by class and id.
     *
     * @param name     Object name
     * @param position Object starting position
     * @param scale    Object starting scale
     * @param rotation Object starting rotation
     */
    public GameObject(String name, Vector2 position, Vector2 scale, float rotation) {
        this.id = GameObjectCollector.getRequestedId().getId();
        this.name = name != null ? name : this.getClass().getSimpleName() + "_" + id;
    }

    /**
     * Is invoked when GameObject is created.
     */
    public abstract void create();

    /**
     * Is invoked when new frame is rendered.
     */
    public abstract void update();

    /**
     * Is invoked when destroy is executed on actual GameObject.
     */
    public abstract void dispose();


    /**
     * Invokes destroy process.
     */
    public final void destroy() {
        dispose();
    }

    /**
     * Returns automatically generated id for actual object.
     *
     * @return current object's id
     */
    public final int getId() {
        return id;
    }
}
